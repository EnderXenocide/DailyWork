/*********************************************************************
 * Name:      	main.cpp
 * Purpose:   	Implements simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:    
 * Created:   
 * Copyright: 
 * License:   	wxWidgets license (www.wxwidgets.org)
 * 
 * Notes:		Note that all GUI creation code is implemented in
 * 				gui.cpp source file which is generated by wxFormBuilder.
 *********************************************************************/

#include "main.h"

// initialize the application
IMPLEMENT_APP(MainApp);

////////////////////////////////////////////////////////////////////////////////
// application class implementation 
////////////////////////////////////////////////////////////////////////////////

bool MainApp::OnInit()
{
	SetTopWindow( new MainFrame( NULL ) );
	GetTopWindow()->Show();
	
	// true = enter the main loop
	return true;
}

////////////////////////////////////////////////////////////////////////////////
// main application frame implementation 
////////////////////////////////////////////////////////////////////////////////

MainFrame::MainFrame(wxWindow *parent) : MainFrameBase( parent )
{
    LoadDatesTree();
 //   dwparser.ConnectCallback([&this](int i) { this.callbackFunction(i); })
    dwparser.ConnectCallback([&this](std::string msg) { this.OnStatusBarMessage(msg); })
    dwparser.Parse();
}

MainFrame::~MainFrame()
{
}

void MainFrame::OnCloseFrame(wxCloseEvent& event)
{
	Destroy();
}

void MainFrame::OnExitClick(wxCommandEvent& event)
{
	Destroy();
}

void MainFrame::LoadDatesTree()
{
    wxTreeItemId rootID=m_treeDates->AddRoot(wxT("Un arbre"));
    for (int i=0;i<10;i++) {
        wxTreeItemId id=m_treeDates->AppendItem(rootID,wxString::Format(wxT("Element : %d"),i+1));
        for(int j=0;j<2*i+2;j++)
            m_treeDates->AppendItem(id,wxString::Format(wxT("Element : %d:%d"),i+1,j+1));
    }
}

// Double clique
void MainFrame::OnCalendarDblClick(wxCalendarEvent& event) 
{ 
    wxTreeItemId ItemID=m_treeDates->GetSelection();
    wxString msg = m_treeDates->GetItemText(ItemID);
    OnStatusBarMessage(msg.ToStdString());
//    if (ItemID != NULL)
 //       m_treeDates->Delete(ItemID);
 //wxWindowBase child;
   // m_treeDates->AddChild()
}  

void MainFrame::OnStatusBarMessage(std::string msg)
{
	m_statusBar->SetStatusText(msg);
}